{"version":3,"sources":["assets/spinner.gif","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/NavbarContainer.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","store/actions/projectActions.js","components/project/CreateProject.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/EditProject.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","components/layout/Loading.js","config/fbConfig.js","index.js"],"names":["module","exports","connect","dispatch","signOut","getState","getFirebase","auth","then","type","profile","ListGroup","horizontal","as","Item","className","Nav","NavLink","to","onClick","Badge","variant","initials","SignedOutLinks","state","firebase","links","uid","Navbar","sticky","bg","Container","Brand","Link","Notifications","notifications","Card","Body","Title","Footer","map","notification","Fragment","key","id","user","style","color","title","content","moment","time","toDate","fromNow","ProjectSummary","project","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","props","Row","Col","xs","md","span","offset","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","deleteProject","getFirestore","console","log","doc","delete","catch","err","projectId","Button","CreateProject","handleChange","e","target","setState","value","handleSubmit","preventDefault","createProject","history","push","Form","onSubmit","Group","controlId","Label","Control","onChange","placeholder","rows","authorId","add","firstName","lastName","Date","SignIn","email","password","signIn","authError","Text","opacity","position","top","right","credential","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","createUserWithEmailAndPassword","res","set","EditProject","editProject","name","updatedAt","App","exact","path","component","ProjectDetails","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","Loading","src","loading","alt","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","profileSpecificProps","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","rffProps","config","createFirestoreInstance","attachAuthIsReady","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6a4a9b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.235b9b3e.gif\";","import React from 'react';\r\nimport { Nav, ListGroup, Badge } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = ({ signOut, profile }) => {\r\n    return (\r\n        <ListGroup horizontal as=\"ul\">\r\n            <ListGroup.Item className=\"my-3 px-2 py-1 bg-dark border-0\" as=\"li\">\r\n                <Nav.Item className=\"ml-1 text-light text-decoration-none\" as={NavLink} to=\"/create\">New Project</Nav.Item>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"my-3 px-2 py-1 bg-dark border-0\" as=\"li\">\r\n                <Nav.Item className=\"ml-1 text-light text-decoration-none logout\" as=\"a\" onClick={signOut}>Log Out</Nav.Item>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"my-auto px-2 py-1 bg-dark border-0\" as=\"li\">\r\n                <Nav.Item className=\"ml-1\" as={NavLink} to=\"/\"><h3 className=\"d-inline-block mb-0 text-uppercase\"><Badge variant=\"success\">{profile.initials}</Badge></h3></Nav.Item>\r\n            </ListGroup.Item>            \r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","// sign in user in the firebase auth\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        // to communicate with firebase authentication\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then( () => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch( (err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err});\r\n        })\r\n    }\r\n}\r\n\r\n// sign out the user in the firebase auth\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then( () => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\n// sign up user in the firebase auth\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then( (res) => {\r\n            return firestore.collection('users')\r\n                    // To using own ID and sync up with auth and collection\r\n                    .doc(res.user.uid)\r\n                    .set({\r\n                        firstName: newUser.firstName,\r\n                        lastName: newUser.lastName,\r\n                        initials: newUser.firstName[0] + newUser.lastName[0]\r\n                    })\r\n        }).then( () => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch( err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { Nav, ListGroup } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ListGroup horizontal as=\"ul\">\r\n            <ListGroup.Item className=\"my-3 px-2 py-1 bg-dark border-0\" as=\"li\">\r\n                <Nav.Item className=\"ml-1 text-light text-decoration-none\" as={NavLink} to=\"/signup\">Signup</Nav.Item>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"my-3 px-2 py-1 bg-dark border-0\" as=\"li\">\r\n                <Nav.Item className=\"ml-1 text-light text-decoration-none\" as={NavLink} to=\"/signin\">Login</Nav.Item>\r\n            </ListGroup.Item>\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Navbar, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst NavbarContainer = ({ auth, profile }) => {\r\n\r\n    // shows different component depend on user logged in or not\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n\r\n    return (\r\n        <Navbar className=\"py-0 mb-3 mb-md-5\" sticky=\"top\" bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n                <Navbar.Brand as={Link} to=\"/\">Travel Planer</Navbar.Brand>\r\n                { links }\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavbarContainer);","import React from 'react';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport moment from 'moment'\r\n\r\nconst Notifications = ({ notifications }) => {\r\n    return (\r\n        <Container>\r\n            <Card className=\"notifications border-0 my-3\">\r\n                <Card.Body className=\"text-secondary pb-2\">\r\n                    <Card.Title as=\"h4\" className=\"text-dark\">Notifications</Card.Title>\r\n                </Card.Body>\r\n                <Card.Footer className=\"blockquote py-0 card-footer border-0\">\r\n\r\n                    { notifications && notifications.map( notification => {\r\n                        return (\r\n                            <React.Fragment key={notification.id}>\r\n                                <p className=\"d-inline-block my-1 lead font-weight-normal text-info text-capitalize\">{notification.user}  <cite style={{color: '#6c757d'}} title=\"Source Title\">{notification.content}</cite></p>\r\n                                <p className=\"text-secondary lead\">{moment(notification.time.toDate()).fromNow()}</p>\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n\r\n                </Card.Footer>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <Card className=\"project-summary border-0 my-3\">\r\n            <Card.Body className=\"text-secondary pb-2\">\r\n                <Card.Title as=\"h4\" className=\"text-dark font-weight-bold\">{project.title}</Card.Title>\r\n            </Card.Body>\r\n            <Card.Footer className=\"blockquote-footer py-0 card-footer border-0\">\r\n                <p className=\"d-inline-block my-1 lead font-weight-normal\">Posted by <cite title=\"Source Title\">{project.authorFirstName} {project.authorLastName}</cite></p>\r\n                <p className=\"text-secondary lead\">{project.createdAt && moment(project.createdAt.toDate()).calendar()}</p>\r\n            </Card.Footer>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <Container className=\"project-list\">\r\n            {/* projects && means, if we have projects, then map through it */}\r\n            { projects && projects.map( project => {\r\n                return (\r\n                    <Link className=\"text-decoration-none\" to={ '/project/' + project.id } key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            }) }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../project/ProjectList';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// connect component with single database collection\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\n\r\n// Higher Order Component (HOC) that connecting redux store and react\r\n// Connect this Dashboard component with the redux store\r\nimport { connect } from 'react-redux';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n\r\n        // if user is not sign in, they cannot access this component(page)\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <Container className=\"dashboard my-3z-index-2 pos-abs\">\r\n                <Row>\r\n                    <Col xs={12} md={6}>\r\n                        <ProjectList projects={projects} />\r\n                    </Col>\r\n                    <Col xs={12} md={{ span:5, offset: 1 }}>\r\n                        <Notifications notifications={notifications} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n/**\r\n * map our state from the store to the props in this component\r\n * @param {*} state state of our redux store\r\n * @returns { object } properties of this component props\r\n * represent which properties are attached to the props of this component, \r\n * so we can access them inside this component\r\n */\r\nconst mapStateToProps = ( state ) => {\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\n// Connect is function for HOC\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport { Container, Card, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { deleteProject } from '../../store/actions/projectActions';\r\nimport { compose } from 'redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = ({ match, project, deleteProject, auth }) => {\r\n    const projectId = match.params.id\r\n    // if user is not sign in, they cannot access this component(page)\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    // const author = project.authorId;\r\n    // const edit = auth.uid === author ? <Button variant=\"success float-right mt-3 mx-1\" type=\"button\" as={ Link } to={'/project/edit/' + projectId}>Edit</Button> : null;\r\n    if( project ) {\r\n        return (\r\n            <Container className=\"project-details\">\r\n                <Card className=\"border-0\">\r\n                    <Card.Body>\r\n                        <Card.Title as=\"h1\" className=\"text-dark\">{ project.title }</Card.Title>\r\n                        <p className=\"blockquote pl-3\">{ project.content }</p>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"blockquote-footer py-0 card-footer border-secondary\">\r\n                        <p className=\"d-inline-block my-1 lead font-weight-normal\">Posted by <cite title=\"Source Title\">{ project.authorFirstName } { project.authorLastName }</cite></p>\r\n                        <p className=\"text-secondary lead\">{project.createdAt && moment(project.createdAt.toDate()).calendar()}</p>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Button variant=\"danger float-right mt-3 mx-1\" type=\"button\" as={ Link } to=\"/\" onClick={ () => deleteProject(projectId)}>Delete</Button>\r\n                <Button variant=\"success float-right mt-3 mx-1\" type=\"button\" as={ Link } to={'/project/edit/' + projectId}>Edit</Button>\r\n                <Button variant=\"info float-right mt-3 mx-1\" type=\"button\" as={ Link } to=\"/\">Go Home</Button>\r\n            </Container>\r\n        )\r\n    } else {\r\n        return (\r\n            <Container>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <p className=\"text-center\">Loading project . . .</p>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // project ID\r\n    const id = ownProps.match.params.id;\r\n    // get projects from firestore database\r\n    const projects = state.firestore.data.projects;\r\n    // get a single project with ID from params\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteProject: (id) => dispatch(deleteProject(id))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects'}\r\n    ])\r\n)(ProjectDetails);","// Action creator. Any kind of actions for project ( deleting, editing, etc. )\r\n\r\nexport const createProject = (project) => {\r\n    // used thunk to return a function\r\n    return ( dispatch, getState, { getFirebase, getFirestore } ) => {\r\n        // make async call to database\r\n\r\n        // reference to my firestore database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then( () => {\r\n            dispatch({ type: 'CREATE_PROJECT', project })\r\n        }).catch( err => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n        })\r\n    }\r\n};\r\n\r\nexport const deleteProject = (id) => {\r\n    // used thunk to return a function\r\n    return ( dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n        console.log(id, 'project action')\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').doc(id).delete()\r\n            .then( () => {\r\n                dispatch({ type: 'DELETE_PROJECT' })\r\n            })\r\n            .catch( err => {\r\n                dispatch({ type: 'DELETE_PROJECT_ERROR', err })\r\n            })\r\n    }\r\n}\r\n\r\nexport const editProject = (project, id) => {\r\n    // used thunk to return a function\r\n    \r\n    return ( dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call to database\r\n\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').doc(id).set({\r\n            ...project,\r\n            updatedAt: new Date()\r\n        })\r\n        .then( () => {\r\n            dispatch({ type: 'UPDATE_PROJECT', project })\r\n        })\r\n        .catch( err => {\r\n            dispatch({ type: 'UPDATE_PROJECT_ERROR', err })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\n\r\n// Higher Order Component (HOC) that connecting redux store and react\r\n// Connect this Dashboard component with the redux store\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// Action creator\r\nimport { createProject } from '../../store/actions/projectActions';\r\n\r\n\r\nclass CreateProject extends Component {\r\n    state ={\r\n        title: '',\r\n        content: ''\r\n    };\r\n\r\n    // Handling input field\r\n    handleChange = (e) => {\r\n        console.log(e.target.id)\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    // Handling form submit\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n\r\n        // if user is not sign in, they cannot access this component(page)\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        \r\n        return (\r\n            <Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <h3 className=\"text-light mb-4\">Create new plan</h3>\r\n                    <Form.Group className=\"col-6\" controlId=\"title\">\r\n                        <Form.Label className=\"text-light\">Title</Form.Label>\r\n                        <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Enter Title\" />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"col-6\" controlId=\"content\">\r\n                        <Form.Label className=\"text-light\">Plan Content</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows=\"4\" onChange={this.handleChange} placeholder=\"Enter Content\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">Create</Button>\r\n                </Form>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n/**\r\n * map our dispatch from the store to the props in this component\r\n * @param {*} dispatch dispatch of our redux store\r\n * @returns { object } properties of this component props\r\n */\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return {\r\n        createProject: ( project ) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","import React, { Component } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state ={\r\n        email: '',\r\n        password: ''\r\n    };\r\n\r\n    // Handling input field\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    // Handling form submit\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n\r\n        // if user is sign in, they don't need to see this component(page)\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <React.Fragment>\r\n                <Container>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <h3 className=\"text-light mb-4\">Sign In</h3>\r\n                        <Form.Group className=\"col-md-6\" controlId=\"email\">\r\n                            <Form.Label className=\"text-light\">Email address</Form.Label>\r\n                            <Form.Control onChange={this.handleChange} type=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"col-md-6\" controlId=\"password\">\r\n                            <Form.Label className=\"text-light\">Password</Form.Label>\r\n                            <Form.Control onChange={this.handleChange} type=\"password\" placeholder=\"Enter password\" />\r\n                            <Form.Text className=\"text-light\" id=\"passwordHelpBlock\">\r\n                                Your password must be 8-20 characters long, contain letters and numbers, and\r\n                                must not contain spaces, special characters, or emoji.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">Login</Button>\r\n                            { authError ? \r\n                                ( <Container className=\"text-center text-danger bg-light col-md-6 py-4 rounded\" style={{ opacity: '.7' }}>\r\n                                    <p className=\"m-0 font-weight-bold\">{authError}</p>\r\n                                </Container> ) : null }\r\n                    </Form>\r\n                </Container>\r\n                <Container className=\"col-auto bg-secondary\" style={{ position: 'absolute', top: '12%', right: '8%', opacity: '.8'}}>\r\n                    <p className=\"mb-1 font-weight-bolder text-light\">Test email and password</p>\r\n                    <p className=\"ml-2 my-0 text-light\">Email: testing@test.com</p>\r\n                    <p className=\"ml-2 my-0 text-light\">Password: test1234</p>\r\n                </Container>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (credential) => dispatch(signIn(credential))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state ={\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    };\r\n\r\n    // Handling input field\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    // Handling form submit\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n\r\n        // if user is sign in, they don't need to see this component(page)\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <h3 className=\"text-light mb-4\">Sign Up</h3>\r\n                    <Form.Group className=\"col-md-6\" controlId=\"email\">\r\n                        <Form.Label className=\"text-light\">Email address</Form.Label>\r\n                        <Form.Control onChange={this.handleChange} type=\"email\" placeholder=\"Enter email\" />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"col-md-6\" controlId=\"password\">\r\n                        <Form.Label className=\"text-light\">Password</Form.Label>\r\n                        <Form.Control onChange={this.handleChange} type=\"password\" placeholder=\"Enter password\" />\r\n                        <Form.Text className=\"text-light\" id=\"passwordHelpBlock\">\r\n                            Your password must be 8-20 characters long, contain letters and numbers, and\r\n                            must not contain spaces, special characters, or emoji.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"col-md-6\" controlId=\"lastName\">\r\n                        <Form.Label className=\"text-light\">Last Name</Form.Label>\r\n                        <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Enter Last Name\" />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"col-md-6\" controlId=\"firstName\">\r\n                        <Form.Label className=\"text-light\">First Name</Form.Label>\r\n                        <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Enter First Name\" />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">Sign up</Button>\r\n                    { authError ? \r\n                        ( <Container className=\"text-center text-danger bg-light col-md-6 py-4 rounded\" style={{ opacity: '.7' }}>\r\n                            <p className=\"m-0 font-weight-bold\">{authError}</p>\r\n                        </Container> ) : null }\r\n                </Form>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { Container, Form, Button, Card } from 'react-bootstrap';\r\n\r\n// Higher Order Component (HOC) that connecting redux store and react\r\n// Connect this Dashboard component with the redux store\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// Action creator\r\nimport { editProject } from '../../store/actions/projectActions';\r\n\r\n\r\nclass EditProject extends Component {\r\n    state ={\r\n        title: '',\r\n        content: ''\r\n    };\r\n\r\n    // Handling input field\r\n    handleChange = (e) => {\r\n        console.log(e.target.id)\r\n        const { authorFirstName, authorLastName, authorId, createdAt } = this.props.project;\r\n        this.setState({\r\n            authorFirstName: authorFirstName,\r\n            authorId: authorId,\r\n            authorLastName: authorLastName,\r\n            createdAt: createdAt,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    // Handling form submit\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.editProject(this.state, this.props.match.params.id);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { project, auth } = this.props;\r\n\r\n        // if user is not sign in, they cannot access this component(page)\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        if( project ) {\r\n            return (\r\n                <Container>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <h3 className=\"text-light mb-4\">Edit plan</h3>\r\n                        <Form.Group className=\"col-6\" controlId=\"title\">\r\n                            <Form.Label className=\"text-light\">Title</Form.Label>\r\n                            <Form.Control onChange={this.handleChange} name='title' type=\"text\" placeholder=\"Enter Title\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"col-6\" controlId=\"content\">\r\n                            <Form.Label className=\"text-light\">Plan Content</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows=\"4\" onChange={this.handleChange} name='content' placeholder=\"Enter Content\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">Edit</Button>\r\n                    </Form>\r\n                </Container>\r\n            )\r\n        } else {\r\n            return (\r\n                <Container>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <p className=\"text-center\">Loading project . . .</p>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // project ID\r\n    const id = ownProps.match.params.id;\r\n    // get projects from firestore database\r\n    const projects = state.firestore.data.projects;\r\n    // get a single project with ID from params\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return {\r\n        editProject: ( project, id ) => dispatch(editProject(project, id))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(EditProject);","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavbarContainer from './components/layout/NavbarContainer';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport CreateProject from './components/project/CreateProject';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport EditProject from './components/project/EditProject';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n      \n        {/* Main Navbar */}\n        <NavbarContainer />\n\n        <Switch>\n          <Route exact path='/' component={ Dashboard } />\n\n          {/* Project related component */}\n          <Route exact path='/project/edit/:id' component={ EditProject } />\n          <Route path='/project/:id' component={ ProjectDetails } />\n          <Route path='/create' component={ CreateProject } />\n\n          {/* SignIn and SignUp component */}\n          <Route path='/signin' component={ SignIn } />\n          <Route path='/signup' component={ SignUp } />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// For manipulate the state\r\n\r\nconst initState = {\r\n    authError: null\r\n};\r\n\r\nconst authReducer = ( state = initState, action ) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","// For manipulate the state\r\n\r\nconst initState = {\r\n    projects: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' },\r\n    ]\r\n};\r\n\r\nconst projectReducer = ( state = initState, action ) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        case 'DELETE_PROJECT':\r\n            console.log('delete project')\r\n            return state;\r\n        case 'DELETE_PROJECT_ERROR':\r\n            console.log('delete project error', action.err)\r\n            return state;\r\n        case 'EDIT_PROJECT':\r\n            console.log('edit project')\r\n            return state;\r\n        case 'UPDATE_PROJECT':\r\n            console.log('update project')\r\n            return state;\r\n        case 'UPDATE_PROJECT_ERROR':\r\n            console.log('update project error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\n\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\n// sync in firestore data with my state\r\nimport { firestoreReducer } from 'redux-firestore';\r\n\r\n// combine different reducers into single reducer\r\nimport { combineReducers } from 'redux';\r\n\r\n// any reducers want to combine together and what do I call it\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    // authentication\r\n    firebase: firebaseReducer,\r\n    // database\r\n    firestore: firestoreReducer\r\n});\r\n\r\n// now in our state object of the store we'll have these ( auth and project properties )\r\n// auth reducer will update information on the auth property \r\n// project reducer will update information on the project property\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nimport loading from '../../assets/spinner.gif';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <Container className=\"loading d-flex justify-content-center\">\r\n            <img\r\n                src={ loading }\r\n                alt='Loading'\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Loading;","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyC0Bp_ipGeTcbReHcrpr7Zm3432Ib26bjg\",\r\n    authDomain: \"project-planer-42ca1.firebaseapp.com\",\r\n    databaseURL: \"https://project-planer-42ca1.firebaseio.com\",\r\n    projectId: \"project-planer-42ca1\",\r\n    storageBucket: \"project-planer-42ca1.appspot.com\",\r\n    messagingSenderId: \"1053513584750\",\r\n    appId: \"1:1053513584750:web:205d2e19de2877b991567f\",\r\n    measurementId: \"G-EH46SW6SMH\"\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Initialize Firestore\r\nfirebase.firestore();\r\n\r\n// Able to use it to interact with our project\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport Loading from './components/layout/Loading';\n\n// react-redux is binding layer \n// help us to bind redux with react app\n// surround our app and pass the store into the application\n// so that application has access to the store\nimport { Provider, useSelector } from 'react-redux';\n\n// redux middleware\n// halt dispatch, inside action creator create asynchronous function\nimport thunk from 'redux-thunk';\n\n// redux firebase and firestore middleware\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\n\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\n\n\n\n// Create Redux central store with firebase authentication and firestore\nconst store = createStore(rootReducer, \n  compose(\n    // first store enhancer\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    // second store enhancer\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\n// firestore collection config\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n  fbConfig: fbConfig\n}\n\n// ReactReduxFirebaseProvider HOC props\nconst rffProps = {\n  firebase,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  attachAuthIsReady: true\n}\n\n// check if user log in before all the component load if not, display spinner component\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector( (state ) => state.firebase.auth);\n  if(!isLoaded(auth)) return <Loading />;\n    return children\n}\n\nReactDOM.render(\n  <React.StrictMode>\n\n    {/* Redux provider */}\n    <Provider store={store}>\n\n      {/* Firebase provider */}\n      <ReactReduxFirebaseProvider {...rffProps}>\n        <AuthIsLoaded>\n          <App />\n        </AuthIsLoaded>\n      </ReactReduxFirebaseProvider>\n      {/* Firebase provider end */}\n\n    </Provider>\n    {/* Redux provider end */}\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}